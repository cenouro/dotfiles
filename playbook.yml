---
- hosts: localhost
  connection: local

  vars:
    - CURRENT_DESKTOP: '{{ ansible_facts.env.XDG_CURRENT_DESKTOP }}'
    - DISTRO: '{{ ansible_facts.distribution }}'

    - HOME: '{{ ansible_env.HOME }}'
    - PWD: '{{ ansible_env.PWD }}'

    - XDG_CONFIG_HOME: '{{ HOME }}/.config'
    - XDG_CACHE_HOME: '{{ HOME }}/.cache'
    - XDG_DATA_HOME: '{{ HOME }}/.local/share'
    - XDG_STATE_HOME: '{{ HOME }}/.local/state'

  pre_tasks:
    - name: Ensure user folder in /opt/
      ansible.builtin.file:
        path: '/opt/{{ ansible_facts.user_id }}'
        state: directory
        owner: '{{ ansible_facts.user_id }}'
        group: '{{ ansible_facts.user_id }}'
        mode: '750'
      become: true

    - name: Ensure XDG directories
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
      loop:
        - '{{ XDG_CONFIG_HOME }}'
        - '{{ XDG_CACHE_HOME }}'
        - '{{ XDG_DATA_HOME }}'
        - '{{ XDG_STATE_HOME }}'

  roles:
    - asdf-vm
    - git
    - role: gnome
      when: CURRENT_DESKTOP == 'GNOME'
    - linux
    - emacs
    - languagetool

  tasks:
    - name: Don't step into gems when debugging ruby code
      ansible.builtin.lineinfile:
        path: '{{ HOME }}/.rdbgrc'
        state: present
        create: true
        line: config set skip_path /\/\.asdf\/installs\/ruby\//

    - name: 'NVIDIA: Avoid screen tearing in Xorg'
      ansible.builtin.blockinfile:
        path: '{{ HOME }}/.xprofile'
        prepend_newline: true
        append_newline: true
        create: true
        marker: '# {mark} Ansible Managed Block | NVIDIA: Avoid screen tearing in Xorg'
        block: "{{ lookup('ansible.builtin.file', './block.nvidia-xprofile.sh') }}"

    - name: Print all available facts (run with --tags debug)
      ansible.builtin.debug:
        var: ansible_facts
      tags: [ debug, never ]

  handlers:
    - name: 'mount fstab'
      ansible.builtin.command:
        cmd: '{{ item }}'
      loop:
        - systemctl daemon-reload
        - mount -a
      become: true
...
